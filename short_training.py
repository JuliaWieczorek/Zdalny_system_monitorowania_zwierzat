# short training
# 9.
exec(open('settings.py').read())
exec(open("functions.py").read())
# exec(open("sample_images.py").read())
exec(open("model.py").read())
# exec(open("model_analysis.py").read())
epochs = epochs_shortrun
import keras
import tensorflow as tf

#epochs = 5
# load results of long training run
sess = tf.compat.v1.Session()
model = keras.models.load_model('convnet_cifar10.kerasave')
model.load_weights('convnet_cifar10.kerasave')

# Fit the model on the batches generated by datagen.flow().
datagen = setup_data_aug()
hist = model.fit_generator(datagen.flow(x_train, y_train,
    batch_size=batch_size),
    steps_per_epoch=x_train.shape[0] // batch_size,
    epochs=epochs,verbose=2,
    validation_data=(x_test, y_test),
    workers=4, callbacks=[checkpoint])

# Save model and weights
model.save(model_path)
print('Saved trained model at %s ' % model_path)

# model- krótki przykład